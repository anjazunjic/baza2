version: '3'

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: MySQLPassword
      MYSQL_DATABASE: sistem_za_regrutaciju
    ports:
      - "3306:3306"
    volumes:
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql  # Initialize DB with dump.sql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]  # Ensure MySQL is up before Flask connects
      interval: 30s  # How often to check if the MySQL server is available
      retries: 3  # Number of retries before declaring MySQL unavailable
      start_period: 30s  # Initial delay before starting health checks
      timeout: 10s  # Timeout for each health check
    restart: always  # Ensure MySQL service restarts if it crashes

  flask:
    build:
      context: .
      dockerfile: Dockerfile-flask
    depends_on:
      - mysql  # Ensures Flask will wait for MySQL service to be ready
    environment:
      MYSQL_HOST: mysql  # 'mysql' is the service name from docker-compose
      MYSQL_USER: root
      MYSQL_PASSWORD: MySQLPassword
      MYSQL_DATABASE: sistem_za_regrutaciju
    ports:
      - "8080:8080"
    networks:
      - mynetwork
    restart: always  # Ensure Flask restarts if it crashes

networks:
  mynetwork:
    driver: bridge  # Use bridge networking to allow Flask and MySQL to communicate